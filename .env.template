# AI Travel Planner - Environment Variables Template
# Copy this file to .env and set the appropriate values

# ===================================
# APPLICATION SETTINGS
# ===================================

# Application name
APP_NAME="AI Travel Planner"

# Debug mode (true/false)
DEBUG=false

# Logging level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Server configuration
HOST=0.0.0.0
PORT=8000

# ===================================
# DATABASE CONFIGURATION
# ===================================

# Database Selection (choose one)
USE_MONGODB=false

# Option 1: Firestore (Google Cloud) - Default
FIRESTORE_PROJECT_ID=your-google-cloud-project-id
FIRESTORE_CREDENTIALS_PATH=path/to/your/service-account-key.json

# Option 2: MongoDB (On-premise alternative)
MONGODB_HOST=localhost
MONGODB_PORT=27017
MONGODB_DATABASE=travel_planner
MONGODB_USERNAME=admin
MONGODB_PASSWORD=password123
MONGODB_AUTH_DATABASE=admin

# Redis (Session and Cache Storage)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=your-redis-password

# ===================================
# AI MODEL CONFIGURATION
# ===================================

# Gemini API Key (Required for AI agents)
GEMINI_API_KEY=your-gemini-api-key

# Gemini Model Configuration
GEMINI_MODEL=gemini-1.5-pro
GEMINI_TEMPERATURE=0.1
GEMINI_MAX_TOKENS=4096

# ===================================
# GOOGLE CLOUD CONFIGURATION (Optional)
# ===================================

# Google Cloud Project (only needed if using Firestore)
GOOGLE_CLOUD_PROJECT=your-google-cloud-project-id

# Google Application Credentials (path to service account key)
GOOGLE_APPLICATION_CREDENTIALS=path/to/your/service-account-key.json

# ===================================
# EXTERNAL API KEYS
# ===================================

# Google Maps API (Required)
GOOGLE_MAPS_API_KEY=your-google-maps-api-key

# OpenWeather API (Optional)
OPENWEATHER_API_KEY=your-openweather-api-key

# Amadeus Travel API (Optional)
AMADEUS_API_KEY=your-amadeus-api-key
AMADEUS_API_SECRET=your-amadeus-api-secret

# Booking.com API (Optional)
BOOKING_COM_API_KEY=your-booking-com-api-key

# Exchange Rates API (Optional)
EXCHANGE_RATES_API_KEY=your-exchange-rates-api-key

# Ticketmaster API (Optional)
TICKETMASTER_API_KEY=your-ticketmaster-api-key

# ===================================
# MCP SERVER CONFIGURATION
# ===================================

# MCP Server Settings
MCP_SERVER_HOST=localhost
MCP_SERVER_PORT=8080

# ===================================
# AUTHENTICATION & SECURITY
# ===================================

# Secret key for JWT tokens (generate a strong random string)
SECRET_KEY=your-super-secret-key-change-this-in-production

# JWT Algorithm
ALGORITHM=HS256

# Access token expiration (minutes)
ACCESS_TOKEN_EXPIRE_MINUTES=30

# ===================================
# AGENT CONFIGURATION
# ===================================

# Maximum iterations for agent execution
MAX_AGENT_ITERATIONS=10

# Agent timeout (seconds)
AGENT_TIMEOUT_SECONDS=120

# ===================================
# TRIP PLANNING LIMITS
# ===================================

# Maximum trip duration (days)
MAX_TRIP_DAYS=30

# Maximum activities per day
MAX_ACTIVITIES_PER_DAY=8

# ===================================
# NOTES
# ===================================

# Required Variables:
# - GEMINI_API_KEY
# - GOOGLE_MAPS_API_KEY
# - Either FIRESTORE_PROJECT_ID (for Firestore) OR MongoDB settings (for on-premise)

# Database Options:
# - Firestore: Set USE_MONGODB=false and configure FIRESTORE_PROJECT_ID
# - MongoDB: Set USE_MONGODB=true and configure MONGODB_* settings

# Optional Variables:
# - All API keys for external services are optional
# - Redis password only needed if Redis requires authentication
# - Credential paths only needed if not using default Google Cloud authentication

# For local development:
# - Set DEBUG=true for more verbose logging
# - Use localhost for Redis and MCP server hosts
# - Use Docker Compose for easy MongoDB setup

# For production:
# - Set DEBUG=false
# - Use strong SECRET_KEY
# - Configure proper Redis authentication
# - Set appropriate LOG_LEVEL (INFO or WARNING)
